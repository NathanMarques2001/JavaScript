Capítulo 1
    1.1. 7
    1.2. 8
    1.3. O(log n)
    1.4. O(n)
    1.5. O(n)
    1.6. O(n/26)
========================
Capítulo 2
    2.1. Lista
    2.2. Lista
    2.3. Array
    2.4. Array é lento para inserir. É necesário reodenar o array e
    ele deve buscar outra posição em memória que caiba todo o array sequencialmente.
    2.5. Para busca: Mais lento que um array e mais rápido que uma lista encadeada.
    Para inserção: Mais rápido que um array e mesmo tempo para uma lista encadeada.
========================
Capítulo 3
    3.1. A função sauda 2 foi chamado antes da função sauda acabar. Logo,
    a função sauda só será finalizada assim que terminar a execução de sauda 2.
    3.2. Overflow.
========================
Capítulo 4
    4.4. Caso base: um array com um elemento.
    Caso recursivo: a quantidade atual de elementos divido por dois, onde uma
    das metades é descartada.
    Ex: n = n / 2;
    4.5. O(n)
    4.6 O(n)
    4.7. O(1)
    4.8 O(n²)
========================
Capítulo 5
    5.1. f(x) = 1 - Consistente
    5.2. f(x) = rand() - Inconsistente
    5.3. f(x) = proximo_espaco_vazio - Inconsistente
    5.4. f(x) = len(x) - Consistente
    5.5. C e D
    5.6. B e D
    5.7. B, C e D
========================
Capítulo 5
    6.1.  x -- x
         / \   |
        x   o  |
         \ /   |
          o -- o
    6.2. jato -> gato -> gado
    6.3. Somente a B é válida
    6.4. 1. Acordar
         2. Praticar exercicio
         3. Tomar banho
         4. Trocar de roupa
         5. Escovar os dentes
         6. Embrulhar o lanche
         7. Tomar café da manhã
    6.5. A e C
========================